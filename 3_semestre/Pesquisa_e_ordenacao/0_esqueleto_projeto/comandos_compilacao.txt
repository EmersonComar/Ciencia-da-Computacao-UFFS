Casos básicos:
    Compilações onde todos os arquivos estão no mesmo nível de diretório

    Compilar um programa sem dependencia externa:
        gcc programa.c -o programa

    Compilar código apenas da implementação para a geração do código objeto, ou seja, de um programa sem a função main():
        gcc -c pilha.c -o pilha.o

    Compilar código fonte dos programas e código de implementação de uma vez:
        gcc main.c pilha.c -o principal

Diretórios:

    obj: diretório onde serão separados os arquivos objetos(.o)
        gcc -c pilha.c -o obj/pilha.o

    include: diretório que ficarão as especificações(.h)
        gcc -c pilha.c -I include/ -o obj/pilha.o

    src: diretório para armazenar as implementações dos TADs(.c)
        gcc -c src/pilha.c -I include/ -o obj/pilha.o

    Observação: Em alguns projetos, os arquivos de implementações ficam no mesmo diretório das implementações(src), dessa forma, a compilação fica simplificada:
        gcc -c src/pilha.c -o obj/pilha.o

    apps: usado para guardar o código fonte dos programas executaveis
    bin: os binários compilados dos programas executaveis
        gcc apps/main.c obj/pilha.o -I include/ -o bin/main

    Observação: Caso sejam utilizados outras implementações, deverá ser passado o código objeto no momento de compilação:
        gcc apps/main.c obj/pilha.o obj/outrocodigo.o -I include/ -o bin/main

    Mas também pode ser utilizado o coringa * para passar todos os arquivos objetos durante a compilação:
        gcc apps/main.c obj/*.o -I include/ -o bin/main